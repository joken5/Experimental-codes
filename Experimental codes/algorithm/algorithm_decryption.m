clc;
clear;
format long;
I=imread('加密Lena512-crop.bmp');
I1=I(:,:,1);I2=I(:,:,2);I3=I(:,:,3);
[M,N]=size(I1);
I=[I1,I2,I3];
x1=zeros(1,2*M*N+2*M);
y1=zeros(1,2*M*N+2*M);
z1=zeros(1,2*M*N+2*M);
x1(1)=0.17283865370934;y1(1)=0.78273617271432; z1(1)=0.39098163748756;
%x1(1)=rand;y1(1)=rand; z1(1)=rand;
k=9;
r=6;
for i=2:501
        x1(i)=mod((2^(k+x1(i-1))).*r.*((y1(i-1)^2)+z1(i-1)),1);
        y1(i)=mod((3^(k+y1(i-1))).*r.*((z1(i-1)^2)+x1(i-1)),1);
        z1(i)=mod((5^(k+z1(i-1))).*r.*((x1(i-1)^2)+y1(i-1)),1);
        r=r+(power(10,-4).*pi.*i)^(1/2);
%   x1(i)=mod((2^13.*u.*(sin(x1(i-1).*pi+y1(i-1).*z1(i-1)))),1);
%   y1(i)=mod((3^13.*(sin(y1(i-1))-u.*x1(i-1).*z1(i-1))),1);
%   z1(i)=mod((5^13.*u.*(x1(i-1)-sin(z1(i-1).*pi+y1(i-1)))),1);
end 
    %d=uint8(mod(floor(x1(501)*10^15),256));%用于密文反馈扩散的与第一个像素异或的值
    %e=uint8(mod(floor(y1(501)*10^15),256));
    x1(1)=x1(500);
    y1(1)=y1(500);
    z1(1)=z1(500);
for j=2:2*M*N+2*M
        x1(i)=mod((2^(k+x1(i-1))).*r.*((y1(i-1)^2)+z1(i-1)),1);
        y1(i)=mod((3^(k+y1(i-1))).*r.*((z1(i-1)^2)+x1(i-1)),1);
        z1(i)=mod((5^(k+z1(i-1))).*r.*((x1(i-1)^2)+y1(i-1)),1);
     
%   x1(j)=mod((2^13.*u.*(sin(x1(j-1).*pi+y1(j-1).*z1(j-1)))),1);
%   y1(j)=mod((3^13.*(sin(y1(j-1))-u.*x1(j-1).*z1(j-1))),1);
%   z1(j)=mod((5^13.*u.*(x1(j-1)-sin(z1(j-1).*pi+y1(j-1)))),1);
  r=r+(power(10,-4).*pi.*j)^(1/2);
end
  F=uint8(mod(floor(x1(1:M*N)*10^15),256));
  D=uint8(mod(floor(y1(1:M*N)*10^15),256));
  E=uint8(mod(floor(z1(1:M*N)*10^15),256));
  F1=uint8(mod(floor(x1(M*N+1:2*M*N)*10^15),256));
  D1=uint8(mod(floor(y1(M*N+1:2*M*N)*10^15),256));
  E1=uint8(mod(floor(z1(M*N+1:2*M*N)*10^15),256));
  F2=uint8(mod(floor(x1(2*M*N+1:2*M*N+M)*10^15),256));
  D2=uint8(mod(floor(y1(2*M*N+1:2*M*N+M)*10^15),256));
  E2=uint8(mod(floor(z1(2*M*N+1:2*M*N+M)*10^15),256));
  G2=uint8(mod(floor(x1(2*M*N+M+1:2*M*N+2*M)*10^15),256));
D=reshape(D,M,N);
F=reshape(F,M,N);
E=reshape(E,M,N);
F1=reshape(F1,M,N);
D1=reshape(D1,M,N);
E1=reshape(E1,M,N);
%[DS,D]=sort(D);
[DS,D]=sort(D);
[ES,D]=sort(E);
[FS,D]=sort(F);
D=bitxor(DS,D1);
F=bitxor(FS,F1);
E=bitxor(ES,E1);
P=cat(2,D2,E2,F2);
S={'E1','49','20','6A','91','13','B4','C1','61','14','59','3D','DB','F4','40','5A','74','FC','8B','5F','7C','F7','4E','07','6C','63','FB','C6','31','FE','FD','15','EA','A7','FF','E7','44','45','2E','94','EE','92','7A','EB','A6','88','02','F5','E6','12','30','9E','2D','00','B3','DD','19','56','F0','96','7F','21','0B','06','A5','37','52','51','7E','5B','72','D5','A3','AB','23','F8','C7','47','9A','36','F6','24','C8','3B','BC','DE','25','D4','D2','81','C5','ED','D1','71','7B','CA','F2','0E','D9','C9','99','97','9F','1E','46','27','D0','DC','09','5D','3E','68','5C','66','AA','E2','A8','62','9B','B2','6F','04','11','DA','55','93','82','0C','53','CE','4B','A0','F9','F3','78','BB','EF','35','7D','57','B8','1D','3A','95','01','98','05','17','10','6B','AC','B1','33','A4','22','38','CC','70','CB','8A','FA','F1','C2','AE','E5','8D','1C','C3','DF','3F','BF','4F','42','5E','BA','26','E8','73','41','16','32','8F','77','60','69','AD','39','28','3C','E0','E4','D6','A9','B6','86','B9','6D','64','65','C4','4D','18','1B','D3','1F','90','8E','9D','A2','D8','43','34','E9','D7','BE','08','54','50','2F','CD','CF','03','B5','0A','AF','8C','E3','0F','85','9C','A1','1A','84','76','B0','4A','4C','6E','89','2A','67','2C','83','29','58','BD','EC','0D','2B','79','48','B7','C0','75','87','80'};
SS=hex2dec(S);
SS=uint8(SS);
[SS1,SP]=sort(SS);  %求逆S盒
%SP=dec2hex(SP);
for i=1:M
    for j=1:N
        I(i,j)=SP(I(i,j)+1)-1;
    end
end
D3=I(:,1:M);
E3=I(:,M+1:2*M);
F3=I(:,2*M+1:3*M);
G1=bitxor(D3,D);
G3=bitxor(E3,E);
G4=bitxor(F3,F);
G=[G1,G3,G4];
Q=G2;
%row=sort(mod(floor(row1*10^15),256));
%col=sort(mod(floor(G2*10^15),256));
%P=sort(row1);
[PS,P]=sort(P);
P=uint16(P);
%Q=sort(G2);
[QS,Q]=sort(Q);
Q=uint16(Q);
GS(Q,:)=G;
G9(:,P)=GS;
CCC=G9;
CC(:,:,1)=CCC(:,1:M);
CC(:,:,2)=CCC(:,M+1:2*M);
CC(:,:,3)=CCC(:,2*M+1:3*M);
imwrite(CC,'加密Lena512-crop-J.bmp');